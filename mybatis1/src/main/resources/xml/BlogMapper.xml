<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mybatis.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.test.mybatis.beans.Blog">
    <id column="bid" jdbcType="INTEGER" property="bid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
  </resultMap>
  
  <resultMap id="UnionResultMap" type="com.test.mybatis.beans.Blog">
    <id column="bid" jdbcType="INTEGER" property="bid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <collection  property="posts" ofType="com.test.mybatis.beans.Post">
      <id  column="pid" property="pid" ></id>
      <result  column="postName" property="post_name" ></result>
    </collection >
  </resultMap>
  <!--方式一: 嵌套结果: 使用嵌套结果映射来处理重复的联合结果的子集-->
  <select id="getBlog" parameterType="int" resultMap="UnionResultMap">
    select * from posts p,blog b where b.bid=p.blog_id  and b.bid=#{id}
   </select>
  
 <resultMap id="UnionResultMap2" type="com.test.mybatis.beans.Blog">
  <id column="bid" jdbcType="INTEGER" property="bid" />
  <result column="name" jdbcType="VARCHAR" property="name" />
  <result column="author_id" jdbcType="INTEGER" property="authorId" />
  <collection  property="posts" column="bid" ofType="com.test.mybatis.beans.Post" select="getPosts" fetchType="eager">
  </collection >
</resultMap>
  <select id="getBlog2" parameterType="int" resultMap="UnionResultMap2">
    select b.bid,b.name,b.author_id from blog b where  b.bid=#{id}
   </select>
  <select id="getPosts" parameterType="int" resultType="com.test.mybatis.beans.Post">
    select p.pid,p.post_name,p.blog_id from posts p where  p.blog_id=#{id}
   </select>
  
  
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bid, name, author_id
  </sql>
  <select id="selectByExample" parameterType="com.test.mybatis.beans.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.mybatis.beans.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.mybatis.beans.Blog">
    insert into blog (bid, name, author_id
      )
    values (#{bid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.mybatis.beans.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        bid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.mybatis.beans.BlogExample" resultType="java.lang.Integer">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.bid != null">
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set bid = #{record.bid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.mybatis.beans.Blog">
    update blog
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.mybatis.beans.Blog">
    update blog
    set name = #{name,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
</mapper>